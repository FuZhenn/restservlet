<?xml version="1.0" encoding="UTF-8"?>
<project name="cn.com.seegoo.servletrest" basedir="." default="jar">
	<property file="build.properties"/>
	
	<path id="all-libs">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>			
		</fileset>
	</path>	
    
    <path id="full-classpath">
    	<path refid="all-libs" />
    	<dirset dir="${target.dir}"/>
    </path>
	
	<target name="usage">
		<echo message=""/>
		<echo message="Seegoo ${project.name} application build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="Available targets are:"/>
		<echo message=""/>
		<echo message="jar-htmlparser --> build rvised htmlparser jar"/>
		<echo message="clean    --> Clean output dirs"/>
		<echo message="build    --> Compile main Java sources"/>
		<echo message="junit    --> Run unit test"/>		
		<echo message="jar      --> Create JAR deployment unit"/>		
		<echo message=""/>
	</target>
	
	
	<target name="clean" description="Clean output dirs">		
		<delete dir="${target.dir}"/>
		<delete dir="${test.dir}"/>
		<delete dir="targetlib"/>
	</target>

	<target name="build" depends="usage,clean,init" description="Compile main Java sources">
		<mkdir dir="${target.dir}"/>	
		<mkdir dir="${src-lib}"/>
		<javac 
		    destdir="${target.dir}" source="1.5" target="1.5" 
		    debug="true" deprecation="true" optimize="false" 
			verbose="false"
		    fork="yes" memoryInitialSize="80m"
		    memoryMaximumSize="256m" encoding="UTF-8"
		    failonerror="true"
		>
		    <compilerarg value="-Xlint:unchecked"/>
			<compilerarg value="-J-Duser.language=en"/>
			<src path="${src.java.dir}"/>
			<classpath refid="all-libs"/>
		</javac>
		
		<!-- copy other none java files such as hibernate hbm.xml files, workflow files files -->
		<copy todir="${target.dir}" preservelastmodified="true">
			<fileset dir="${src.java.dir}">
				<exclude name="**/*.java"/>
			</fileset>

		</copy>
		</target>	


	
	
 	<target name="junit" depends="build" description="Run unit tests">
		<mkdir dir="${test.dir}"/>
		<mkdir dir="${test.dir}/report"/>
		
		<javac destdir="${test.dir}"  debug="true" deprecation="true"
			optimize="false" failonerror="true"
			verbose="false"
			encoding="utf-8">
			<src path="${src.test.dir}"/>
			<classpath location="${target.dir}"/>
			<classpath refid="all-libs"/>
		</javac>
		
		<copy todir="${test.dir}" preservelastmodified="true">
			<fileset dir="${src.test.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>

		<junit printsummary="withOutAndErr" 
			haltonfailure="yes" haltonerror="yes" 
			showoutput="true" fork="true"
			>
			<classpath location="${target.dir}"/>
			<classpath location="${test.dir}"/>
			<classpath refid="all-libs"/>

			<formatter type="xml"/>

			<batchtest fork="yes" todir="${test.dir}/report">
				<fileset dir="${test.dir}" includes="**/*Test.class" excludes="**/*AbstractTest.class"/>
			</batchtest>
		</junit>

	    
	</target>
	

    <target name="release" depends="jar">
		<mkdir dir="${dist.dir}"/>
		<fileset id="main" dir=".">
			<include name="webroot/**"/>
			<include name="lib/**"/>
			<include name="src/**"/>
			<include name=".classpath"/>
			<include name=".project"/>
			<include name="build.properties"/>
			<include name="build.xml"/>
		</fileset>

		<zip zipfile="${dist.dir}/${project.name}-${project.version}.zip">
			<zipfileset refid="main"/>
		</zip>
    </target>
	
	<!-- 设置我们Ant任务的初始化工作     -->
	      <target name="init">
	              <!--工程名称-->
	              <property name="project_name" value="NationalCheckpoints" />
	 
	              <!--源jar包所在路径-->
	              <property name="src-lib" value="srclib" />
	              <!--目标jar包所在得路径-->
	              <property name="target-lib" value="targetlib" />
	 
	              <!--yguard混淆器工作产生的日志文件-->
	              <property name="obfuscationlog" value="${project_name}_obf_log.xml" />
	 
	              <!--第三方库所在的路径-->
	              <property name="third-party-lib-path" value="lib" />
	      </target>
		
		
		<target name="jar" depends="build" description="生成工程jar包" >
				<!--删除旧jar包和版本说明-->			
		    	<delete file="${src-lib}/${project.name}_${project.version}.jar" />
		        <jar destfile="${src-lib}/${project.name}_${project.version}.jar">
					<fileset dir="${target.dir}">
						<include name="**/*"/>
					</fileset>
		        </jar>
		    	<!-- 拷贝jar包和版本说明-->
	   </target>
	   
    <!-- - - - - - - - - - - - - - - - - - 
          target: copy                       
         - - - - - - - - - - - - - - - - - -->
		<target name="copy" depends="obfuscate"> 
		    	<!--<target name="copy">-->
		    	<copy todir="${war.dir}/WEB-INF/classes" preservelastmodified="true">
		    		<fileset dir="${target.dir}"/>
		    		
					<fileset dir="${target.dir}">
						<include name="log4j.properties"/>
						<include name="conf/ehcache.xml"/>
						<include name="rules/**/*"/>
					</fileset>
				</copy>
				<!--混淆过的jar-->
				
				
				<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">					
					<fileset dir="targetlib">
						<include name="*.jar"/>
					</fileset>
				</copy>

				<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
					<fileset dir="${lib.dir}">
						<include name="*.jar"/>
						<exclude name="servlet.jar"/>
						<exclude name="jaas.jar"/>
					</fileset>
				</copy>
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
				<fileset dir="${lib.dir}/hibernate">
					<include name="*.jar"/>
				</fileset>
			</copy>
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
				<fileset dir="${lib.dir}/htmlparser">
					<include name="*.jar"/>
				</fileset>
			</copy>
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
				<fileset dir="${lib.dir}/spring">
					<include name="*.jar"/>
				</fileset>
			</copy>
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
				<fileset dir="${lib.dir}/struts">
					<include name="*.jar"/>
				</fileset>
			</copy>
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
				<fileset dir="${lib.dir}/derby">
					<include name="*.jar"/>
				</fileset>
			</copy>
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
				<fileset dir="${lib.dir}/servlet">
					<include name="*.jar"/>
				</fileset>

			</copy>
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
				<fileset dir="${lib.dir}/drools">
					<include name="*.jar"/>
				</fileset>
			</copy>
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
				<fileset dir="${lib.dir}/freemarker">
					<include name="*.jar"/>
				</fileset>
			</copy>
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
					<fileset dir="${lib.dir}/json">
						<include name="*.jar"/>
					</fileset>
			</copy>
			
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
					<fileset dir="${lib.dir}/rhino">
						<include name="*.jar"/>
					</fileset>
			</copy>
			
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
					<fileset dir="${lib.dir}/urlrewriter">
						<include name="*.jar"/>
					</fileset>
			</copy>
			
			<copy todir="${war.dir}/WEB-INF/lib" preservelastmodified="true">
				<fileset dir="${lib.dir}/rhino">
					<include name="js.jar"/>
				</fileset>

			</copy>
			

		    </target>


	 
	      <!-- ***********************************混淆任务 **************************-->
	
	      <target name="obfuscate" depends="jar" >
	      		<mkdir dir="targetlib"/>
	              <taskdef name="obfuscate" classname="com.yworks.yguard.ObfuscatorTask" classpath="${third-party-lib-path}/yguard/yguard.jar" />
	 
	              <!-- 不同工程需要修改的地方 -->
	              <obfuscate logfile="${obfuscationlog}" >
	                     <!--有错误时将中断该target-->
	                     <property name="error-checking" value="pedantic" />
	                     <property name="language-conformity" value="illegal" />
	                     <!--采用混合方式产生名字-->
	                     <property name="naming-scheme" value="Small" />
	              			 
	                     <!--设置需要暴露哪些信息，这些信息将不会被混淆-->
	                     <expose>
	                             <!--仅保持类名不变，完全混淆类的其他信息-->		
	                     	<class classes="none" methods="protected" fields="private">
                                 <patternset id="sunlight">  
                                 	<include name="cn.com.seegoo.swas.**.dao.*" />
                                 	<include name="cn.com.seegoo.swas.**.dao.**.*" />
                                 	<include name="cn.com.seegoo.swas.**.dao.*" />
                                 	<include name="cn.com.seegoo.swas.**.dao.**.*" />
                                 </patternset>
                         </class>
	                     	
	                     	<class name="cn.com.seegoo.swas.pageparser.util.MyLobHandler" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.bean.*" classes="protected" methods="protected" fields="private" />	
	                     	<class name="cn.com.seegoo.swas.service.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.count.bean.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.count.dao.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.count.service.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.pageparser.web.action.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.site.style.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.site.style.web.action.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.count.bean.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.count.service.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.papeparser.web.actionform.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.web.filter.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.web.filter.compression.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.web.listener.InitListener" classes="protected" methods="protected" fields="private" />                     	
	                     	<class name="cn.com.seegoo.swas.service.ServiceLocator" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.service.impl.*" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.web.struts.ServiceAutowireRequestProcessor" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.pageparser.servlet.ParseServlet" classes="protected" methods="protected" fields="private" />

	                     	<class name="cn.com.seegoo.swas.site.style.StyleConfig" classes="protected" methods="protected" fields="private" />
	                     	<class name="cn.com.seegoo.swas.site.style.web.action.StyleConfigAction" classes="protected" methods="protected" fields="private" />

	                             <!-- 保持所有的属性(过时的方法，文件名，行号、本地变量表)，在系统允许过程中，可能会发生错误信息，
	                             如果不保存这些信息，出错时很难跟踪代码，为方便调试保留了这些信息               -->
	                             <attribute name="Deprecated, SourceFile, LineNumberTable, LocalVariableTable">
	                                     <patternset refid="sunlight" />
	                             </attribute>
	                     </expose>
	 					
	              	    
	                     <!--设置所有用到得第三方库，不混淆它们-->
	                     <externalclasses>
	                             <pathelement location="${third-party-lib-path}/spring/spring.jar" />
	                     	     <pathelement location="${third-party-lib-path}/acegi-security-1.0.0.jar" />
	                             <pathelement location="${third-party-lib-path}/rome-0.8.jar" />
	                             <pathelement location="${third-party-lib-path}/lucene-1.4-final.jar" />
	                     		 <pathelement location="${third-party-lib-path}/struts/struts2-core-2.0.11.jar" />
			   	              	 <pathelement location="${third-party-lib-path}/hibernate/hibernate3.jar" />
			   	              	 <pathelement location="${third-party-lib-path}/freemarker.jar" />
				              	 <pathelement location="${third-party-lib-path}/log4j-1.2.11.jar" />
               	              	 <pathelement location="${third-party-lib-path}/hibernate/dom4j-1.6.1.jar" />
			  	              	 <pathelement location="${third-party-lib-path}/velocity-1.4.jar" />
                                 <pathelement location="${third-party-lib-path}/servlet/servlet.jar" />
	                     	     <pathelement location="${third-party-lib-path}/jakarta-oro.jar" />
          	              	     <pathelement location="${third-party-lib-path}/jaas.jar" />
		  	              	     <pathelement location="${third-party-lib-path}/pager-taglib.jar" />
                                 <pathelement location="${third-party-lib-path}/cglib-nodep-2.1_3.jar" />
                    	         <pathelement location="${third-party-lib-path}/ehcache-1.1.jar" />
 	                     	     <pathelement location="${third-party-lib-path}/struts/commons-logging-1.0.4.jar" />
		                     	 <pathelement location="${third-party-lib-path}/commons-fileupload.jar" />
		                     	 <pathelement location="${third-party-lib-path}/struts/commons-validator-1.3.1.jar" />
		                     	 <pathelement location="${third-party-lib-path}/struts/commons-beanutils-1.7.0.jar" />
		                     	 <pathelement location="${third-party-lib-path}/struts/commons-lang-2.1.jar" />
	                     		 <pathelement location="${third-party-lib-path}/struts/struts-core-1.3.8.jar" />
	                     		 <pathelement location="${third-party-lib-path}/struts/struts-extras-1.3.8.jar" />
	                     		 <pathelement location="${third-party-lib-path}/struts/struts-tiles-1.3.8.jar" />
		                     	 <pathelement location="${third-party-lib-path}/mail.jar" />
	                     		 <pathelement location="${third-party-lib-path}/htmlparser/htmlparser.jar" />
	                     		 <pathelement location="${third-party-lib-path}/derby/derby.jar" />
	                     		 <pathelement location="${third-party-lib-path}/rhino/js.jar" />
	                     		 <pathelement location="${third-party-lib-path}/urlrewriter/urlrewrite-2.6.0.jar" />

	                     </externalclasses>
	 
	                     <!--输入和输出jar包，可以有多行-->
	                     <!--*********************输入、输出设置开始*************************-->
	                     <inoutpair in="${src-lib}/sunlight.jar" out="${target-lib}/commons-frame-obf.jar" />
	                     <!--*********************输入、输出设置结束*************************-->
	 
	                     <!--调整jar包的资源文件中的引用的类名 -->
	                     <adjust replaceContent="true">
		                     	 <include name="*.xml" />
	                             <include name="**/*.xml" />
	                             <include name="./**/*.xml" />
	                     </adjust>
	 
	              </obfuscate>
	              <!-- 不同工程需要修改的地方 -->
	      </target>
	
	      <!-- ***********************************混淆任务结束 ************************-->	
</project>